<idea-plugin>
  <id>Stapler plugin for IntelliJ IDEA</id>
  <name>Jenkins Development Support</name>
  <vendor url="https://github.com/jenkinsci/idea-stapler-plugin" email="jenkinsci-dev@googlegroups.com">jenkins</vendor>
  <category>Framework integration</category>
<!--  Managed from build.gradle -->
<!--  <description></description>-->
<!--  <version>1.8</version>-->
<!--  <idea-version since-build="110.00"/>-->

  <extensions defaultExtensionNs="com.intellij">
    <!--
      REFERENCE:
      to find out how to register a given extension point,
      check the ExtensionPointName.create call in the extension point, and use its name
      as the element name (modulo the part defined in @defaultExtensionNs above.)
    -->
    <!-- Adds "*.jelly" to the XML file type extensions -->
    <!-- *.jellytag is a seldom used stapler jelly tag tag file extension
         https://github.com/jenkinsci/stapler/blob/1709.ve4c10835694b_/jelly/src/main/java/org/kohsuke/stapler/jelly/CustomTagLibrary.java#L128-L130 -->
    <fileType name="Jelly" implementationClass="org.kohsuke.stapler.idea.language.JellyFileType"
              fieldName="INSTANCE"
              language="Jelly"
              extensions="jelly;jellytag"/>
    <!-- ? -->
    <!--    <dom.fileDescription implementation="org.kohsuke.stapler.idea.dom.model.JellyDomDescription"/>-->
    <!-- Completion for Jelly Tags -->
    <completion.contributor language="Jelly" implementationClass="org.kohsuke.stapler.idea.JellyCompletionContributor"/>

    <completion.contributor language="Jelly" implementationClass="io.jenkins.stapler.idea.jelly.IconSrcCompletionContributor" />

    <!-- ? -->
    <!--<xml.elementDescriptorProvider implementation="org.kohsuke.stapler.idea.descriptor.XmlElementDescriptorProviderImpl" />-->
    <!-- I initially thought of using this to drive auto-completion,
      but it doesn't really work as I hoped for. So I'm switching to CompletionContribuer.
    <dom.extender domClass=     "org.kohsuke.stapler.idea.dom.model.JellyTag"
                  extenderClass="org.kohsuke.stapler.idea.dom.model.JellyTagExtender"/>
    -->
    <!-- Dummy Schema for the Jelly Tag libraries -->
    <xml.schemaProvider implementation="org.kohsuke.stapler.idea.descriptor.StaplerCustomJellyTagLibraryXmlSchemaProvider"/>
    <!-- Provide Metadata for Dummy Schemas -->
    <metaDataContributor implementation="org.kohsuke.stapler.idea.descriptor.JellyTaglibMetadataContributor"/>
    <!-- ? -->
    <annotator language="Jelly" implementationClass="org.kohsuke.stapler.idea.JellyAnnotator"/>
    <!-- Show Documentation for Jelly Tag Libraries
       https://plugins.jetbrains.com/docs/intellij/documentation.html#implementation
    -->
    <lang.documentationProvider language="Jelly" implementationClass="org.kohsuke.stapler.idea.JellyDocumentationProvider"/>
    <!-- Tells IntelliJ that script and style tags inside *.jelly files are JavaScript and CSS correspondingly -->
    <multiHostInjector implementation="org.kohsuke.stapler.idea.JellyLanguageInjector"/>
    <!-- Evaluates JEXL and reports any errors -->
    <localInspection language="Jelly" enabledByDefault="true" level="ERROR"
                     displayName="Checks syntax of JEXL expressions"
                     groupName="Stapler"
                     implementationClass="org.kohsuke.stapler.idea.JexlInspection"/>
    <!-- FooBar. No intention described in the javadocs -->
    <!--
        <localInspection language="Jelly" enabledByDefault="true" level="ERROR"
                         shortName="I18nInspection" displayName="Test something"
                         groupName="Stapler"
                         implementationClass="org.kohsuke.stapler.idea.I18nInspection" />
    -->
    <localInspection language="Jelly" enabledByDefault="true" level="WARNING"
                     displayName="Deprecated Jelly Tag library attribute usage"
                     groupName="Stapler"
                     implementationClass="io.jenkins.stapler.idea.jelly.DeprecatedStaplerJellyCustomTagAttributeInspection" />
    <!-- jelly file definition parser -->
    <lang.parserDefinition language="Jelly"
                           implementationClass="org.kohsuke.stapler.idea.language.JellyParserDefinition"/>
    <!-- Additional link to jelly file from a java file -->
    <lang.structureViewExtension implementation="org.kohsuke.stapler.idea.extension.JavaStructureViewExtension"/>
    <!-- Additional link to java file from a jelly file -->
    <lang.structureViewExtension implementation="org.kohsuke.stapler.idea.extension.JellyStructureViewExtension"/>

    <dependencySupport coordinate="org.jenkins-ci.main:jenkins-core" kind="java" displayName="Jenkins core" />

    <errorHandler implementation="com.intellij.diagnostic.JetBrainsMarketplaceErrorReportSubmitter"/>
    <localInspection language="Jelly"
                     enabledByDefault="true"
                     level="WARNING"
                     displayName="Invalid symbol name"
                     groupName="Stapler"
                     implementationClass="io.jenkins.stapler.idea.jelly.InvalidIconSrcInspection" />
  </extensions>
  <!-- Jelly taglibs XML Schemas -->
  <extensions defaultExtensionNs="com.intellij">
    <standardResource url="jelly:ant" path="org/kohsuke/stapler/idea/resources/schemas/ant.xsd" />
    <standardResource url="jelly:antlr" path="org/kohsuke/stapler/idea/resources/schemas/antlr.xsd" />
    <standardResource url="jelly:bean" path="org/kohsuke/stapler/idea/resources/schemas/bean.xsd" />
    <standardResource url="jelly:beanshell" path="org/kohsuke/stapler/idea/resources/schemas/beanshell.xsd" />
    <standardResource url="jelly:betwixt" path="org/kohsuke/stapler/idea/resources/schemas/betwixt.xsd" />
    <standardResource url="jelly:bsf" path="org/kohsuke/stapler/idea/resources/schemas/bsf.xsd" />
    <standardResource url="jelly:core" path="org/kohsuke/stapler/idea/resources/schemas/core.xsd" />
    <standardResource url="jelly:define" path="org/kohsuke/stapler/idea/resources/schemas/define.xsd" />
    <standardResource url="jelly:dynabean" path="org/kohsuke/stapler/idea/resources/schemas/dynabean.xsd" />
    <standardResource url="jelly:email" path="org/kohsuke/stapler/idea/resources/schemas/email.xsd" />
    <standardResource url="jelly:fmt" path="org/kohsuke/stapler/idea/resources/schemas/fmt.xsd" />
    <standardResource url="jelly:html" path="org/kohsuke/stapler/idea/resources/schemas/html.xsd" />
    <standardResource url="jelly:http" path="org/kohsuke/stapler/idea/resources/schemas/http.xsd" />
    <standardResource url="jelly:interaction" path="org/kohsuke/stapler/idea/resources/schemas/interaction.xsd" />
    <standardResource url="jelly:jaxme" path="org/kohsuke/stapler/idea/resources/schemas/jaxme.xsd" />
    <standardResource url="jelly:jetty" path="org/kohsuke/stapler/idea/resources/schemas/jetty.xsd" />
    <standardResource url="jelly:jface" path="org/kohsuke/stapler/idea/resources/schemas/jface.xsd" />
    <standardResource url="jelly:jms" path="org/kohsuke/stapler/idea/resources/schemas/jms.xsd" />
    <standardResource url="jelly:jmx" path="org/kohsuke/stapler/idea/resources/schemas/jmx.xsd" />
    <standardResource url="jelly:jsl" path="org/kohsuke/stapler/idea/resources/schemas/jsl.xsd" />
    <standardResource url="jelly:junit" path="org/kohsuke/stapler/idea/resources/schemas/junit.xsd" />
    <standardResource url="jelly:log" path="org/kohsuke/stapler/idea/resources/schemas/log.xsd" />
    <standardResource url="jelly:memory" path="org/kohsuke/stapler/idea/resources/schemas/memory.xsd" />
    <standardResource url="jelly:ojb" path="org/kohsuke/stapler/idea/resources/schemas/ojb.xsd" />
    <standardResource url="jelly:quartz" path="org/kohsuke/stapler/idea/resources/schemas/quartz.xsd" />
    <standardResource url="jelly:regexp" path="org/kohsuke/stapler/idea/resources/schemas/regexp.xsd" />
    <standardResource url="jelly:soap" path="org/kohsuke/stapler/idea/resources/schemas/soap.xsd" />
    <standardResource url="jelly:sql" path="org/kohsuke/stapler/idea/resources/schemas/sql.xsd" />
    <standardResource url="jelly:swing" path="org/kohsuke/stapler/idea/resources/schemas/swing.xsd" />
    <standardResource url="jelly:swt" path="org/kohsuke/stapler/idea/resources/schemas/swt.xsd" />
    <standardResource url="jelly:threads" path="org/kohsuke/stapler/idea/resources/schemas/threads.xsd" />
    <standardResource url="jelly:util" path="org/kohsuke/stapler/idea/resources/schemas/util.xsd" />
    <standardResource url="jelly:validate" path="org/kohsuke/stapler/idea/resources/schemas/validate.xsd" />
    <standardResource url="jelly:velocity" path="org/kohsuke/stapler/idea/resources/schemas/velocity.xsd" />
    <standardResource url="jelly:xml" path="org/kohsuke/stapler/idea/resources/schemas/xml.xsd" />
    <standardResource url="jelly:xmlunit" path="org/kohsuke/stapler/idea/resources/schemas/xmlunit.xsd" />
    <standardResource url="jelly:stapler" path="org/kohsuke/stapler/idea/resources/schemas/stapler.xsd" />
  </extensions>
  <!-- intelli lang plugin isn't needed for just doing injection
  <extensions defaultExtensionNs="org.intellij.intelliLang">
    <CustomLanguageInjectorExtension
            implementation="org.kohsuke.stapler.idea.CustomLanguageInjectorExtensionImpl" />
  </extensions>
  -->
  <actions>
    <!-- insert Action from the project view (Alt+1,Alt+INS) to see the possible locations -->
    <action id="GotoStaplerView" class="org.kohsuke.stapler.idea.GotoViewAction"
            text="Goto Stapler View" description="Jump from a Java class to its stapler views">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift P"/>
      <add-to-group group-id="GoToCodeGroup" anchor="after" relative-to-action="GotoSuperMethod" />
    </action>
    <action id="stapler-i18n" class="org.kohsuke.stapler.idea.I18nRefactorAction" text="i18n for stapler" description="i18n for stapler">
      <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt I"/>
      <add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="I18nize"/>
    </action>
  </actions>

  <!-- https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->
  <!-- The bare platform shared by all jetbrains products -->
  <depends>com.intellij.modules.platform</depends>
  <!-- Jelly is an XML file type -->
  <depends>com.intellij.modules.xml</depends>
  <!-- Stapler is a Java Framework. And this is required to maintain compatibility past 2019.2 -->
  <depends>com.intellij.modules.java</depends>
  <!-- needed for i18n support -->
  <depends>com.intellij.properties</depends>
  <!-- this is needed for language injection -->
  <!--<depends>org.intellij.intelliLang</depends>-->
  <depends>com.intellij.platform.images</depends>
</idea-plugin>
